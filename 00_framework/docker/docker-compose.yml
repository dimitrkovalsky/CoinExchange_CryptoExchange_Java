version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "UploadFile:1:1,GetFile:1:1,TrackUpload:1:1,GetEmailContent:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass devRedis
    ports:
      - "6379:6379"
#    volumes:
#      - $PWD/redis-data:/var/lib/redis
#      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

#    networks:
#      node_net:
#        ipv4_address: 172.28.1.4

  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'bizzan'
      MYSQL_USER: 'dev'
      MYSQL_PASSWORD: 'devPassword123'
      MYSQL_ROOT_PASSWORD: 'devPassword123'
    ports:
      - '3306:3306'
    expose:
      - '3306'
#    volumes:
#      - my-db:/var/lib/mysql
  # Names our volume
#  volumes:
#    my-db:
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
      - MONGODB_USER=bizzan
      - MONGODB_DATABASE=bitrade
      - MONGODB_PASS=devPassword123
#    volumes:
#      - /home/barry/mongodb/database:/data/db
    ports:
      - 27017:28017
    restart: unless-stopped

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elastic
    environment:
      - node.name=elastic
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    volumes:
#      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
#    networks:
#      - elastic